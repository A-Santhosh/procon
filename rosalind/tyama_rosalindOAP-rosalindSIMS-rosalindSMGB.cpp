#include <iostream>
#include <string>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <functional>
#include <climits>
using namespace std;
typedef pair<int,int> pii;
typedef vector<pii> vpii;

enum{
	mode_oap,
	mode_sims,
	mode_smgb,
};
const int MODE=mode_smgb;

pair<string,string> alignment(const string &x,const string &y,bool foap,bool ftruncate,int d,int e,int &score,const function<int(char,char)> &matcher){
	vector<vpii>M(x.size()+1,vpii(y.size()+1));
	vector<vpii>X(x.size()+1,vpii(y.size()+1));
	vector<vpii>Y(x.size()+1,vpii(y.size()+1));
	M[0][0]={0,-1};
	X[0][0]={0,-1};
	Y[0][0]={INT_MIN/2,-1};
	for(int i=1;i<=x.size();i++){
		M[i][0]={INT_MIN/2,-1};
		X[i][0]={0,ftruncate?-1:1};
		Y[i][0]={INT_MIN/2,-1};
	}
	for(int j=1;j<=y.size();j++){
		M[0][j]={INT_MIN/2,-1};
		X[0][j]={INT_MIN/2,-1};
		Y[0][j]={d+e*(j-1),2};
	}
	pair<pii,int> result={{0,-1},-1};
	int curx=x.size(),cury=y.size();
	for(int i=1;i<=x.size();i++){
		for(int j=1;j<=y.size();j++){
			vpii Z={{M[i-1][j-1].first,0|8},{X[i-1][j-1].first,1},{Y[i-1][j-1].first,2}};
			M[i][j]=*max_element(Z.begin(),Z.end());
			M[i][j].first+=matcher(x[i-1],y[j-1]);
			M[i][j].second&=3;
			X[i][j]=max(pii({M[i-1][j].first+d,0|8}),max(pii({X[i-1][j].first+e,1}),pii({Y[i-1][j].first+d,2})));
			X[i][j].second&=3;
			Y[i][j]=max(pii({M[i][j-1].first+d,0|8}),max(pii({X[i][j-1].first+d,1}),pii({Y[i][j-1].first+e,2})));
			Y[i][j].second&=3;
		}
	}
	if(foap){
		for(int i=0;i<=y.size();i++){
			vector<pair<pii,int>> Z={{M[x.size()][i],0|8},{X[x.size()][i],1},{Y[x.size()][i],2}};
			auto &m=*max_element(Z.begin(),Z.end());
			if(result<m){
				result=m;
				cury=i;
			}
		}
	}else{
		for(int i=0;i<=x.size();i++){
			vector<pair<pii,int>> Z={{M[i][y.size()],0|8},{X[i][y.size()],1},{Y[i][y.size()],2}};
			auto &m=*max_element(Z.begin(),Z.end());
			if(result<m){
				result=m;
				curx=i;
			}
		}
	}
	result.second&=3;
	score=result.first.first;

	//Backtrack
	int nxtmat=result.first.second,curmat=result.second;
	string a,b;
	if(!ftruncate){
		if(foap){
			a=string(y.size()-cury,'-');
			b=y.substr(cury);
			reverse(b.begin(),b.end());
		}else{
			a=x.substr(curx);
			b=string(x.size()-curx,'-');
			reverse(a.begin(),a.end());
		}
	}
	for(;nxtmat>=0;){
		auto &MAT=nxtmat==0?M:nxtmat==1?X:Y;
		if(curmat==0){
			curx-=1;
			cury-=1;
			a+=x[curx];
			b+=y[cury];
		}else if(curmat==1){
			curx-=1;
			a+=x[curx];
			b+='-';
		}else if(curmat==2){
			cury-=1;
			a+='-';
			b+=y[cury];
		}
		curmat=nxtmat;
		nxtmat=MAT[curx][cury].second;
	}
	reverse(a.begin(),a.end());
	reverse(b.begin(),b.end());
	return {a,b};
}
vector<pair<string,string>> parsefasta(istream &in){
	vector<pair<string,string>> ret;
	string head,seq,line;
	getline(in,head);head=head.substr(1);
	for(;getline(in,line);){
		if(line[0]=='>'){
			ret.push_back({head,seq});
			head=line.substr(1);
			seq="";
		}else{
			seq+=line;
		}
	}
	ret.push_back({head,seq});
	return ret;
}
int main(){
	cin.tie(0);
	ios::sync_with_stdio(false);
	string s,z,t;
	unordered_map<char,unordered_map<char,int>> blosum62={
		{'*',{{'*',1},{'A',-4},{'B',-4},{'C',-4},{'D',-4},{'E',-4},{'F',-4},{'G',-4},{'H',-4},{'I',-4},{'K',-4},{'L',-4},{'M',-4},{'N',-4},{'P',-4},{'Q',-4},{'R',-4},{'S',-4},{'T',-4},{'V',-4},{'W',-4},{'X',-4},{'Y',-4},{'Z',-4},}},
		{'A',{{'*',-4},{'A',4},{'B',-2},{'C',0},{'D',-2},{'E',-1},{'F',-2},{'G',0},{'H',-2},{'I',-1},{'K',-1},{'L',-1},{'M',-1},{'N',-2},{'P',-1},{'Q',-1},{'R',-1},{'S',1},{'T',0},{'V',0},{'W',-3},{'X',0},{'Y',-2},{'Z',-1},}},
		{'B',{{'*',-4},{'A',-2},{'B',4},{'C',-3},{'D',4},{'E',1},{'F',-3},{'G',-1},{'H',0},{'I',-3},{'K',0},{'L',-4},{'M',-3},{'N',3},{'P',-2},{'Q',0},{'R',-1},{'S',0},{'T',-1},{'V',-3},{'W',-4},{'X',-1},{'Y',-3},{'Z',1},}},
		{'C',{{'*',-4},{'A',0},{'B',-3},{'C',9},{'D',-3},{'E',-4},{'F',-2},{'G',-3},{'H',-3},{'I',-1},{'K',-3},{'L',-1},{'M',-1},{'N',-3},{'P',-3},{'Q',-3},{'R',-3},{'S',-1},{'T',-1},{'V',-1},{'W',-2},{'X',-2},{'Y',-2},{'Z',-3},}},
		{'D',{{'*',-4},{'A',-2},{'B',4},{'C',-3},{'D',6},{'E',2},{'F',-3},{'G',-1},{'H',-1},{'I',-3},{'K',-1},{'L',-4},{'M',-3},{'N',1},{'P',-1},{'Q',0},{'R',-2},{'S',0},{'T',-1},{'V',-3},{'W',-4},{'X',-1},{'Y',-3},{'Z',1},}},
		{'E',{{'*',-4},{'A',-1},{'B',1},{'C',-4},{'D',2},{'E',5},{'F',-3},{'G',-2},{'H',0},{'I',-3},{'K',1},{'L',-3},{'M',-2},{'N',0},{'P',-1},{'Q',2},{'R',0},{'S',0},{'T',-1},{'V',-2},{'W',-3},{'X',-1},{'Y',-2},{'Z',4},}},
		{'F',{{'*',-4},{'A',-2},{'B',-3},{'C',-2},{'D',-3},{'E',-3},{'F',6},{'G',-3},{'H',-1},{'I',0},{'K',-3},{'L',0},{'M',0},{'N',-3},{'P',-4},{'Q',-3},{'R',-3},{'S',-2},{'T',-2},{'V',-1},{'W',1},{'X',-1},{'Y',3},{'Z',-3},}},
		{'G',{{'*',-4},{'A',0},{'B',-1},{'C',-3},{'D',-1},{'E',-2},{'F',-3},{'G',6},{'H',-2},{'I',-4},{'K',-2},{'L',-4},{'M',-3},{'N',0},{'P',-2},{'Q',-2},{'R',-2},{'S',0},{'T',-2},{'V',-3},{'W',-2},{'X',-1},{'Y',-3},{'Z',-2},}},
		{'H',{{'*',-4},{'A',-2},{'B',0},{'C',-3},{'D',-1},{'E',0},{'F',-1},{'G',-2},{'H',8},{'I',-3},{'K',-1},{'L',-3},{'M',-2},{'N',1},{'P',-2},{'Q',0},{'R',0},{'S',-1},{'T',-2},{'V',-3},{'W',-2},{'X',-1},{'Y',2},{'Z',0},}},
		{'I',{{'*',-4},{'A',-1},{'B',-3},{'C',-1},{'D',-3},{'E',-3},{'F',0},{'G',-4},{'H',-3},{'I',4},{'K',-3},{'L',2},{'M',1},{'N',-3},{'P',-3},{'Q',-3},{'R',-3},{'S',-2},{'T',-1},{'V',3},{'W',-3},{'X',-1},{'Y',-1},{'Z',-3},}},
		{'K',{{'*',-4},{'A',-1},{'B',0},{'C',-3},{'D',-1},{'E',1},{'F',-3},{'G',-2},{'H',-1},{'I',-3},{'K',5},{'L',-2},{'M',-1},{'N',0},{'P',-1},{'Q',1},{'R',2},{'S',0},{'T',-1},{'V',-2},{'W',-3},{'X',-1},{'Y',-2},{'Z',1},}},
		{'L',{{'*',-4},{'A',-1},{'B',-4},{'C',-1},{'D',-4},{'E',-3},{'F',0},{'G',-4},{'H',-3},{'I',2},{'K',-2},{'L',4},{'M',2},{'N',-3},{'P',-3},{'Q',-2},{'R',-2},{'S',-2},{'T',-1},{'V',1},{'W',-2},{'X',-1},{'Y',-1},{'Z',-3},}},
		{'M',{{'*',-4},{'A',-1},{'B',-3},{'C',-1},{'D',-3},{'E',-2},{'F',0},{'G',-3},{'H',-2},{'I',1},{'K',-1},{'L',2},{'M',5},{'N',-2},{'P',-2},{'Q',0},{'R',-1},{'S',-1},{'T',-1},{'V',1},{'W',-1},{'X',-1},{'Y',-1},{'Z',-1},}},
		{'N',{{'*',-4},{'A',-2},{'B',3},{'C',-3},{'D',1},{'E',0},{'F',-3},{'G',0},{'H',1},{'I',-3},{'K',0},{'L',-3},{'M',-2},{'N',6},{'P',-2},{'Q',0},{'R',0},{'S',1},{'T',0},{'V',-3},{'W',-4},{'X',-1},{'Y',-2},{'Z',0},}},
		{'P',{{'*',-4},{'A',-1},{'B',-2},{'C',-3},{'D',-1},{'E',-1},{'F',-4},{'G',-2},{'H',-2},{'I',-3},{'K',-1},{'L',-3},{'M',-2},{'N',-2},{'P',7},{'Q',-1},{'R',-2},{'S',-1},{'T',-1},{'V',-2},{'W',-4},{'X',-2},{'Y',-3},{'Z',-1},}},
		{'Q',{{'*',-4},{'A',-1},{'B',0},{'C',-3},{'D',0},{'E',2},{'F',-3},{'G',-2},{'H',0},{'I',-3},{'K',1},{'L',-2},{'M',0},{'N',0},{'P',-1},{'Q',5},{'R',1},{'S',0},{'T',-1},{'V',-2},{'W',-2},{'X',-1},{'Y',-1},{'Z',3},}},
		{'R',{{'*',-4},{'A',-1},{'B',-1},{'C',-3},{'D',-2},{'E',0},{'F',-3},{'G',-2},{'H',0},{'I',-3},{'K',2},{'L',-2},{'M',-1},{'N',0},{'P',-2},{'Q',1},{'R',5},{'S',-1},{'T',-1},{'V',-3},{'W',-3},{'X',-1},{'Y',-2},{'Z',0},}},
		{'S',{{'*',-4},{'A',1},{'B',0},{'C',-1},{'D',0},{'E',0},{'F',-2},{'G',0},{'H',-1},{'I',-2},{'K',0},{'L',-2},{'M',-1},{'N',1},{'P',-1},{'Q',0},{'R',-1},{'S',4},{'T',1},{'V',-2},{'W',-3},{'X',0},{'Y',-2},{'Z',0},}},
		{'T',{{'*',-4},{'A',0},{'B',-1},{'C',-1},{'D',-1},{'E',-1},{'F',-2},{'G',-2},{'H',-2},{'I',-1},{'K',-1},{'L',-1},{'M',-1},{'N',0},{'P',-1},{'Q',-1},{'R',-1},{'S',1},{'T',5},{'V',0},{'W',-2},{'X',0},{'Y',-2},{'Z',-1},}},
		{'V',{{'*',-4},{'A',0},{'B',-3},{'C',-1},{'D',-3},{'E',-2},{'F',-1},{'G',-3},{'H',-3},{'I',3},{'K',-2},{'L',1},{'M',1},{'N',-3},{'P',-2},{'Q',-2},{'R',-3},{'S',-2},{'T',0},{'V',4},{'W',-3},{'X',-1},{'Y',-1},{'Z',-2},}},
		{'W',{{'*',-4},{'A',-3},{'B',-4},{'C',-2},{'D',-4},{'E',-3},{'F',1},{'G',-2},{'H',-2},{'I',-3},{'K',-3},{'L',-2},{'M',-1},{'N',-4},{'P',-4},{'Q',-2},{'R',-3},{'S',-3},{'T',-2},{'V',-3},{'W',11},{'X',-2},{'Y',2},{'Z',-3},}},
		{'X',{{'*',-4},{'A',0},{'B',-1},{'C',-2},{'D',-1},{'E',-1},{'F',-1},{'G',-1},{'H',-1},{'I',-1},{'K',-1},{'L',-1},{'M',-1},{'N',-1},{'P',-2},{'Q',-1},{'R',-1},{'S',0},{'T',0},{'V',-1},{'W',-2},{'X',-1},{'Y',-1},{'Z',-1},}},
		{'Y',{{'*',-4},{'A',-2},{'B',-3},{'C',-2},{'D',-3},{'E',-2},{'F',3},{'G',-3},{'H',2},{'I',-1},{'K',-2},{'L',-1},{'M',-1},{'N',-2},{'P',-3},{'Q',-1},{'R',-2},{'S',-2},{'T',-2},{'V',-1},{'W',2},{'X',-1},{'Y',7},{'Z',-2},}},
		{'Z',{{'*',-4},{'A',-1},{'B',1},{'C',-3},{'D',1},{'E',4},{'F',-3},{'G',-2},{'H',0},{'I',-3},{'K',1},{'L',-3},{'M',-1},{'N',0},{'P',-1},{'Q',3},{'R',0},{'S',0},{'T',-1},{'V',-2},{'W',-3},{'X',-1},{'Y',-2},{'Z',4},}},
	};
	unordered_map<char,unordered_map<char,int>> pam250={
		{'*',{{'*',1},{'A',-8},{'B',-8},{'C',-8},{'D',-8},{'E',-8},{'F',-8},{'G',-8},{'H',-8},{'I',-8},{'K',-8},{'L',-8},{'M',-8},{'N',-8},{'P',-8},{'Q',-8},{'R',-8},{'S',-8},{'T',-8},{'V',-8},{'W',-8},{'X',-8},{'Y',-8},{'Z',-8},}},
		{'A',{{'*',-8},{'A',2},{'B',0},{'C',-2},{'D',0},{'E',0},{'F',-3},{'G',1},{'H',-1},{'I',-1},{'K',-1},{'L',-2},{'M',-1},{'N',0},{'P',1},{'Q',0},{'R',-2},{'S',1},{'T',1},{'V',0},{'W',-6},{'X',0},{'Y',-3},{'Z',0},}},
		{'B',{{'*',-8},{'A',0},{'B',3},{'C',-4},{'D',3},{'E',3},{'F',-4},{'G',0},{'H',1},{'I',-2},{'K',1},{'L',-3},{'M',-2},{'N',2},{'P',-1},{'Q',1},{'R',-1},{'S',0},{'T',0},{'V',-2},{'W',-5},{'X',-1},{'Y',-3},{'Z',2},}},
		{'C',{{'*',-8},{'A',-2},{'B',-4},{'C',12},{'D',-5},{'E',-5},{'F',-4},{'G',-3},{'H',-3},{'I',-2},{'K',-5},{'L',-6},{'M',-5},{'N',-4},{'P',-3},{'Q',-5},{'R',-4},{'S',0},{'T',-2},{'V',-2},{'W',-8},{'X',-3},{'Y',0},{'Z',-5},}},
		{'D',{{'*',-8},{'A',0},{'B',3},{'C',-5},{'D',4},{'E',3},{'F',-6},{'G',1},{'H',1},{'I',-2},{'K',0},{'L',-4},{'M',-3},{'N',2},{'P',-1},{'Q',2},{'R',-1},{'S',0},{'T',0},{'V',-2},{'W',-7},{'X',-1},{'Y',-4},{'Z',3},}},
		{'E',{{'*',-8},{'A',0},{'B',3},{'C',-5},{'D',3},{'E',4},{'F',-5},{'G',0},{'H',1},{'I',-2},{'K',0},{'L',-3},{'M',-2},{'N',1},{'P',-1},{'Q',2},{'R',-1},{'S',0},{'T',0},{'V',-2},{'W',-7},{'X',-1},{'Y',-4},{'Z',3},}},
		{'F',{{'*',-8},{'A',-3},{'B',-4},{'C',-4},{'D',-6},{'E',-5},{'F',9},{'G',-5},{'H',-2},{'I',1},{'K',-5},{'L',2},{'M',0},{'N',-3},{'P',-5},{'Q',-5},{'R',-4},{'S',-3},{'T',-3},{'V',-1},{'W',0},{'X',-2},{'Y',7},{'Z',-5},}},
		{'G',{{'*',-8},{'A',1},{'B',0},{'C',-3},{'D',1},{'E',0},{'F',-5},{'G',5},{'H',-2},{'I',-3},{'K',-2},{'L',-4},{'M',-3},{'N',0},{'P',0},{'Q',-1},{'R',-3},{'S',1},{'T',0},{'V',-1},{'W',-7},{'X',-1},{'Y',-5},{'Z',0},}},
		{'H',{{'*',-8},{'A',-1},{'B',1},{'C',-3},{'D',1},{'E',1},{'F',-2},{'G',-2},{'H',6},{'I',-2},{'K',0},{'L',-2},{'M',-2},{'N',2},{'P',0},{'Q',3},{'R',2},{'S',-1},{'T',-1},{'V',-2},{'W',-3},{'X',-1},{'Y',0},{'Z',2},}},
		{'I',{{'*',-8},{'A',-1},{'B',-2},{'C',-2},{'D',-2},{'E',-2},{'F',1},{'G',-3},{'H',-2},{'I',5},{'K',-2},{'L',2},{'M',2},{'N',-2},{'P',-2},{'Q',-2},{'R',-2},{'S',-1},{'T',0},{'V',4},{'W',-5},{'X',-1},{'Y',-1},{'Z',-2},}},
		{'K',{{'*',-8},{'A',-1},{'B',1},{'C',-5},{'D',0},{'E',0},{'F',-5},{'G',-2},{'H',0},{'I',-2},{'K',5},{'L',-3},{'M',0},{'N',1},{'P',-1},{'Q',1},{'R',3},{'S',0},{'T',0},{'V',-2},{'W',-3},{'X',-1},{'Y',-4},{'Z',0},}},
		{'L',{{'*',-8},{'A',-2},{'B',-3},{'C',-6},{'D',-4},{'E',-3},{'F',2},{'G',-4},{'H',-2},{'I',2},{'K',-3},{'L',6},{'M',4},{'N',-3},{'P',-3},{'Q',-2},{'R',-3},{'S',-3},{'T',-2},{'V',2},{'W',-2},{'X',-1},{'Y',-1},{'Z',-3},}},
		{'M',{{'*',-8},{'A',-1},{'B',-2},{'C',-5},{'D',-3},{'E',-2},{'F',0},{'G',-3},{'H',-2},{'I',2},{'K',0},{'L',4},{'M',6},{'N',-2},{'P',-2},{'Q',-1},{'R',0},{'S',-2},{'T',-1},{'V',2},{'W',-4},{'X',-1},{'Y',-2},{'Z',-2},}},
		{'N',{{'*',-8},{'A',0},{'B',2},{'C',-4},{'D',2},{'E',1},{'F',-3},{'G',0},{'H',2},{'I',-2},{'K',1},{'L',-3},{'M',-2},{'N',2},{'P',0},{'Q',1},{'R',0},{'S',1},{'T',0},{'V',-2},{'W',-4},{'X',0},{'Y',-2},{'Z',1},}},
		{'P',{{'*',-8},{'A',1},{'B',-1},{'C',-3},{'D',-1},{'E',-1},{'F',-5},{'G',0},{'H',0},{'I',-2},{'K',-1},{'L',-3},{'M',-2},{'N',0},{'P',6},{'Q',0},{'R',0},{'S',1},{'T',0},{'V',-1},{'W',-6},{'X',-1},{'Y',-5},{'Z',0},}},
		{'Q',{{'*',-8},{'A',0},{'B',1},{'C',-5},{'D',2},{'E',2},{'F',-5},{'G',-1},{'H',3},{'I',-2},{'K',1},{'L',-2},{'M',-1},{'N',1},{'P',0},{'Q',4},{'R',1},{'S',-1},{'T',-1},{'V',-2},{'W',-5},{'X',-1},{'Y',-4},{'Z',3},}},
		{'R',{{'*',-8},{'A',-2},{'B',-1},{'C',-4},{'D',-1},{'E',-1},{'F',-4},{'G',-3},{'H',2},{'I',-2},{'K',3},{'L',-3},{'M',0},{'N',0},{'P',0},{'Q',1},{'R',6},{'S',0},{'T',-1},{'V',-2},{'W',2},{'X',-1},{'Y',-4},{'Z',0},}},
		{'S',{{'*',-8},{'A',1},{'B',0},{'C',0},{'D',0},{'E',0},{'F',-3},{'G',1},{'H',-1},{'I',-1},{'K',0},{'L',-3},{'M',-2},{'N',1},{'P',1},{'Q',-1},{'R',0},{'S',2},{'T',1},{'V',-1},{'W',-2},{'X',0},{'Y',-3},{'Z',0},}},
		{'T',{{'*',-8},{'A',1},{'B',0},{'C',-2},{'D',0},{'E',0},{'F',-3},{'G',0},{'H',-1},{'I',0},{'K',0},{'L',-2},{'M',-1},{'N',0},{'P',0},{'Q',-1},{'R',-1},{'S',1},{'T',3},{'V',0},{'W',-5},{'X',0},{'Y',-3},{'Z',-1},}},
		{'V',{{'*',-8},{'A',0},{'B',-2},{'C',-2},{'D',-2},{'E',-2},{'F',-1},{'G',-1},{'H',-2},{'I',4},{'K',-2},{'L',2},{'M',2},{'N',-2},{'P',-1},{'Q',-2},{'R',-2},{'S',-1},{'T',0},{'V',4},{'W',-6},{'X',-1},{'Y',-2},{'Z',-2},}},
		{'W',{{'*',-8},{'A',-6},{'B',-5},{'C',-8},{'D',-7},{'E',-7},{'F',0},{'G',-7},{'H',-3},{'I',-5},{'K',-3},{'L',-2},{'M',-4},{'N',-4},{'P',-6},{'Q',-5},{'R',2},{'S',-2},{'T',-5},{'V',-6},{'W',17},{'X',-4},{'Y',0},{'Z',-6},}},
		{'X',{{'*',-8},{'A',0},{'B',-1},{'C',-3},{'D',-1},{'E',-1},{'F',-2},{'G',-1},{'H',-1},{'I',-1},{'K',-1},{'L',-1},{'M',-1},{'N',0},{'P',-1},{'Q',-1},{'R',-1},{'S',0},{'T',0},{'V',-1},{'W',-4},{'X',-1},{'Y',-2},{'Z',-1},}},
		{'Y',{{'*',-8},{'A',-3},{'B',-3},{'C',0},{'D',-4},{'E',-4},{'F',7},{'G',-5},{'H',0},{'I',-1},{'K',-4},{'L',-1},{'M',-2},{'N',-2},{'P',-5},{'Q',-4},{'R',-4},{'S',-3},{'T',-3},{'V',-2},{'W',0},{'X',-2},{'Y',10},{'Z',-4},}},
		{'Z',{{'*',-8},{'A',0},{'B',2},{'C',-5},{'D',3},{'E',3},{'F',-5},{'G',0},{'H',2},{'I',-2},{'K',0},{'L',-3},{'M',-2},{'N',1},{'P',0},{'Q',3},{'R',0},{'S',0},{'T',-1},{'V',-2},{'W',-6},{'X',-1},{'Y',-4},{'Z',3},}},
	};
	unordered_map<char,unordered_map<char,int>> ednafull={
		{'A',{{'A',5},{'B',-4},{'C',-4},{'D',-1},{'G',-4},{'H',-1},{'K',-4},{'M',1},{'N',-2},{'R',1},{'S',-4},{'T',-4},{'U',-4},{'V',-1},{'W',1},{'Y',-4},}},
		{'B',{{'A',-4},{'B',-1},{'C',-1},{'D',-2},{'G',-1},{'H',-2},{'K',-1},{'M',-3},{'N',-1},{'R',-3},{'S',-1},{'T',-1},{'U',-1},{'V',-2},{'W',-3},{'Y',-1},}},
		{'C',{{'A',-4},{'B',-1},{'C',5},{'D',-4},{'G',-4},{'H',-1},{'K',-4},{'M',1},{'N',-2},{'R',-4},{'S',1},{'T',-4},{'U',-4},{'V',-1},{'W',-4},{'Y',1},}},
		{'D',{{'A',-1},{'B',-2},{'C',-4},{'D',-1},{'G',-1},{'H',-2},{'K',-1},{'M',-3},{'N',-1},{'R',-1},{'S',-3},{'T',-1},{'U',-1},{'V',-2},{'W',-1},{'Y',-3},}},
		{'G',{{'A',-4},{'B',-1},{'C',-4},{'D',-1},{'G',5},{'H',-4},{'K',1},{'M',-4},{'N',-2},{'R',1},{'S',1},{'T',-4},{'U',-4},{'V',-1},{'W',-4},{'Y',-4},}},
		{'H',{{'A',-1},{'B',-2},{'C',-1},{'D',-2},{'G',-4},{'H',-1},{'K',-3},{'M',-1},{'N',-1},{'R',-3},{'S',-3},{'T',-1},{'U',-1},{'V',-2},{'W',-1},{'Y',-1},}},
		{'K',{{'A',-4},{'B',-1},{'C',-4},{'D',-1},{'G',1},{'H',-3},{'K',-1},{'M',-4},{'N',-1},{'R',-2},{'S',-2},{'T',1},{'U',1},{'V',-3},{'W',-2},{'Y',-2},}},
		{'M',{{'A',1},{'B',-3},{'C',1},{'D',-3},{'G',-4},{'H',-1},{'K',-4},{'M',-1},{'N',-1},{'R',-2},{'S',-2},{'T',-4},{'U',-4},{'V',-1},{'W',-2},{'Y',-2},}},
		{'N',{{'A',-2},{'B',-1},{'C',-2},{'D',-1},{'G',-2},{'H',-1},{'K',-1},{'M',-1},{'N',-1},{'R',-1},{'S',-1},{'T',-2},{'U',-2},{'V',-1},{'W',-1},{'Y',-1},}},
		{'R',{{'A',1},{'B',-3},{'C',-4},{'D',-1},{'G',1},{'H',-3},{'K',-2},{'M',-2},{'N',-1},{'R',-1},{'S',-2},{'T',-4},{'U',-4},{'V',-1},{'W',-2},{'Y',-4},}},
		{'S',{{'A',-4},{'B',-1},{'C',1},{'D',-3},{'G',1},{'H',-3},{'K',-2},{'M',-2},{'N',-1},{'R',-2},{'S',-1},{'T',-4},{'U',-4},{'V',-1},{'W',-4},{'Y',-2},}},
		{'T',{{'A',-4},{'B',-1},{'C',-4},{'D',-1},{'G',-4},{'H',-1},{'K',1},{'M',-4},{'N',-2},{'R',-4},{'S',-4},{'T',5},{'U',5},{'V',-4},{'W',1},{'Y',1},}},
		{'U',{{'A',-4},{'B',-1},{'C',-4},{'D',-1},{'G',-4},{'H',-1},{'K',1},{'M',-4},{'N',-2},{'R',-4},{'S',-4},{'T',5},{'U',5},{'V',-4},{'W',1},{'Y',1},}},
		{'V',{{'A',-1},{'B',-2},{'C',-1},{'D',-2},{'G',-1},{'H',-2},{'K',-3},{'M',-1},{'N',-1},{'R',-1},{'S',-1},{'T',-4},{'U',-4},{'V',-1},{'W',-3},{'Y',-3},}},
		{'W',{{'A',1},{'B',-3},{'C',-4},{'D',-1},{'G',-4},{'H',-1},{'K',-2},{'M',-2},{'N',-1},{'R',-2},{'S',-4},{'T',1},{'U',1},{'V',-3},{'W',-1},{'Y',-2},}},
		{'Y',{{'A',-4},{'B',-1},{'C',1},{'D',-3},{'G',-4},{'H',-1},{'K',-2},{'M',-2},{'N',-1},{'R',-4},{'S',-2},{'T',1},{'U',1},{'V',-3},{'W',-2},{'Y',-1},}},
	};

	auto fasta=parsefasta(cin);
	int score;
	pair<string,string> res;
	if(MODE==mode_smgb){
		//do it 4 times
		int maxscore=0;
		auto mres=res;
		res=alignment(fasta[0].second,fasta[1].second,true,false,-1,-1,score,[&](const char &a,const char &b)->int{return a==b ? 1 : -1;});
		if(score>maxscore){
			maxscore=score;
			mres=res;
		}
		res=alignment(fasta[1].second,fasta[0].second,true,false,-1,-1,score,[&](const char &a,const char &b)->int{return a==b ? 1 : -1;});
		if(score>maxscore){
			maxscore=score;
			mres={res.second,res.first};
		}
		res=alignment(fasta[0].second,fasta[1].second,false,false,-1,-1,score,[&](const char &a,const char &b)->int{return a==b ? 1 : -1;});
		if(score>maxscore){
			maxscore=score;
			mres=res;
		}
		res=alignment(fasta[1].second,fasta[0].second,false,false,-1,-1,score,[&](const char &a,const char &b)->int{return a==b ? 1 : -1;});
		if(score>maxscore){
			maxscore=score;
			mres={res.second,res.first};
		}
		cout<<maxscore<<endl;
		cout<<mres.first<<endl;
		cout<<mres.second<<endl;
	}else{
		if(MODE==mode_oap)res=alignment(fasta[0].second,fasta[1].second,true,true,-2,-2,score,[&](const char &a,const char &b)->int{return a==b ? 1 : -2;});
		if(MODE==mode_sims)res=alignment(fasta[0].second,fasta[1].second,false,true,-1,-1,score,[&](const char &a,const char &b)->int{return a==b ? 1 : -1;});
		cout<<score<<endl;
		cout<<res.first<<endl;
		cout<<res.second<<endl;
	}
}